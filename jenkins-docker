pipeline{
    agent any
     tools {
        maven 'Maven'
    }
    
    environment{
        PATH = "/opt/maven3/bin:$PATH"
    }
    stages{
        stage("Git Checkout"){
            steps{
                git url: 'https://github.com/ravikumar9121992/web-application.git'
            }
        }
        stage("Maven Build"){
            steps{
                sh "mvn clean package sonar:sonar"
                
            }
        }
        
        stage('Upload War To Nexus'){
            steps{
                  nexusArtifactUploader artifacts: [[artifactId: 'maven_app', classifier: '', file: 'target/mavenapp-8.2.0.war', type: 'war']],
                  credentialsId: 'nexus', groupId: 'in.javahome', nexusUrl: '172.31.35.81:8081', nexusVersion: 'nexus3', protocol: 'http',
                  repository: 'sample-release', version: '8.2.0'  
              }
            }
        stage('Build Docker Image'){
            steps{
                 sh 'docker build -t awsdocker123456789/spring-boot-mongo .'
                 sh 'docker build -t tomcat:${BUILD_NUMBER} .'
                 sh 'docker run -itd --name tomcatravi -p 2900:8080 tomcat:${BUILD_NUMBER}'
             }
         }
        stage('Push Docker Image'){
             steps{
                  withCredentials([usernameColonPassword(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
                      sh "docker login -u awsdocker123456789 -p ${DOCKER_HUB_CREDENTIALS}"
            }
            sh 'docker push awsdocker123456789/spring-boot-mongo'
        }
      }
        
        
    }
}
